{"ast":null,"code":"var _jsxFileName = \"/afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:3002/api';\n\n  // Example scenarios\n  const scenarios = [\"I'm looking for sustainable skincare products. Can you recommend something?\", \"Is the organic aloe vera moisturizer currently in stock?\", \"What promotions do you have for eco-friendly products?\", \"Can you tell me about my past purchases?\"];\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const sendMessage = async messageText => {\n    if (!messageText.trim()) return;\n\n    // Add user message to the chat\n    const userMessage = {\n      text: messageText,\n      sender: 'user'\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      // Send the message to the API\n      const response = await axios.post(`${apiUrl}/inquiry`, {\n        query: messageText,\n        customerName: 'Alice Johnson' // Default customer for demo\n      });\n\n      // Add assistant response to the chat\n      const assistantMessage = {\n        text: response.data.response,\n        sender: 'assistant',\n        model: response.data.model,\n        serverType: response.data.serverType,\n        modelVersion: response.data.modelVersion || 'unknown',\n        usingMock: response.data.usingMock || false\n      };\n      setMessages(prevMessages => [...prevMessages, assistantMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n\n      // Add error message\n      const errorMessage = {\n        text: 'Sorry, there was an error processing your request. Please try again.',\n        sender: 'assistant'\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    sendMessage(input);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI-Powered Smart Retail Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Using Model Context Protocol (MCP) with Azure OpenAI models\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Hello! I'm your AI retail assistant. How can I help you today?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), message.model && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"model-info\",\n            children: [\"Powered by \", message.model, \" \", message.modelVersion !== 'unknown' ? `(${message.modelVersion})` : '', \" via \", message.serverType, \" MCP Server\", message.usingMock && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mock-indicator\",\n              children: \" (Using Simulated Response)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"input-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Ask me about products, inventory, or promotions...\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading || !input.trim(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scenario-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Demo Scenarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click on any example to try it:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), scenarios.map((scenario, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scenario-example\",\n        onClick: () => sendMessage(scenario),\n        children: scenario\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0Rl+6G1WxT5QG5DM/O5vHEtILWo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","messagesEndRef","apiUrl","process","env","REACT_APP_API_URL","scenarios","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","messageText","trim","userMessage","text","sender","prevMessages","response","post","query","customerName","assistantMessage","data","model","serverType","modelVersion","usingMock","error","console","errorMessage","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","message","index","ref","onSubmit","type","value","onChange","target","placeholder","disabled","scenario","onClick","_c","$RefreshReg$"],"sources":["/afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/client/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  \n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:3002/api';\n  \n  // Example scenarios\n  const scenarios = [\n    \"I'm looking for sustainable skincare products. Can you recommend something?\",\n    \"Is the organic aloe vera moisturizer currently in stock?\",\n    \"What promotions do you have for eco-friendly products?\",\n    \"Can you tell me about my past purchases?\"\n  ];\n  \n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  \n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  const sendMessage = async (messageText) => {\n    if (!messageText.trim()) return;\n    \n    // Add user message to the chat\n    const userMessage = {\n      text: messageText,\n      sender: 'user'\n    };\n    \n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    \n    try {\n      // Send the message to the API\n      const response = await axios.post(`${apiUrl}/inquiry`, {\n        query: messageText,\n        customerName: 'Alice Johnson' // Default customer for demo\n      });\n      \n      // Add assistant response to the chat\n      const assistantMessage = {\n        text: response.data.response,\n        sender: 'assistant',\n        model: response.data.model,\n        serverType: response.data.serverType,\n        modelVersion: response.data.modelVersion || 'unknown',\n        usingMock: response.data.usingMock || false\n      };\n      \n      setMessages(prevMessages => [...prevMessages, assistantMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      \n      // Add error message\n      const errorMessage = {\n        text: 'Sorry, there was an error processing your request. Please try again.',\n        sender: 'assistant'\n      };\n      \n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    sendMessage(input);\n  };\n  \n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>AI-Powered Smart Retail Assistant</h1>\n        <p>Using Model Context Protocol (MCP) with Azure OpenAI models</p>\n      </header>\n      \n      <div className=\"chat-container\">\n        <div className=\"messages\">\n          {messages.length === 0 && (\n            <div className=\"message assistant\">\n              <p>Hello! I'm your AI retail assistant. How can I help you today?</p>\n            </div>\n          )}\n          \n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              <p>{message.text}</p>\n              {message.model && (\n                <div className=\"model-info\">\n                  Powered by {message.model} {message.modelVersion !== 'unknown' ? `(${message.modelVersion})` : ''} via {message.serverType} MCP Server\n                  {message.usingMock && <span className=\"mock-indicator\"> (Using Simulated Response)</span>}\n                </div>\n              )}\n            </div>\n          ))}\n          \n          {isLoading && (\n            <div className=\"typing-indicator\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          )}\n          \n          <div ref={messagesEndRef} />\n        </div>\n        \n        <form className=\"input-form\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Ask me about products, inventory, or promotions...\"\n            disabled={isLoading}\n          />\n          <button type=\"submit\" disabled={isLoading || !input.trim()}>\n            Send\n          </button>\n        </form>\n      </div>\n      \n      <div className=\"scenario-section\">\n        <h2>Demo Scenarios</h2>\n        <p>Click on any example to try it:</p>\n        \n        {scenarios.map((scenario, index) => (\n          <div \n            key={index} \n            className=\"scenario-example\"\n            onClick={() => sendMessage(scenario)}\n          >\n            {scenario}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}