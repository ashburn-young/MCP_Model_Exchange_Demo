{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[messages,setMessages]=useState([]);const[input,setInput]=useState('');const[isLoading,setIsLoading]=useState(false);const[availableModels,setAvailableModels]=useState([]);const[selectedModel,setSelectedModel]=useState('');const messagesEndRef=useRef(null);// Force the API URL to the correct server port\nconst apiUrl='http://localhost:3005/api';// Log the API URL for debugging\nconsole.log('Using API URL:',apiUrl);// Example scenarios\nconst scenarios=[\"I'm looking for sustainable skincare products. Can you recommend something?\",\"Is the organic aloe vera moisturizer currently in stock?\",\"What promotions do you have for eco-friendly products?\",\"Can you tell me about my past purchases?\"];// Fetch available models when component mounts\nuseEffect(()=>{const fetchModels=async()=>{try{const response=await axios.get(\"\".concat(apiUrl,\"/models\"));setAvailableModels(response.data.models||[]);console.log('Available models:',response.data.models);}catch(error){console.error('Error fetching models:',error);}};fetchModels();},[apiUrl]);useEffect(()=>{scrollToBottom();},[messages]);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};const sendMessage=async messageText=>{if(!messageText.trim())return;// Add user message to the chat\nconst userMessage={text:messageText,sender:'user'};setMessages(prevMessages=>[...prevMessages,userMessage]);setInput('');setIsLoading(true);try{// Send the message to the API\nconst response=await axios.post(\"\".concat(apiUrl,\"/inquiry\"),{query:messageText,customerName:'Alice Johnson',// Default customer for demo\npreferredModel:selectedModel||undefined});// Add assistant response to the chat\nconst assistantMessage={text:response.data.response,sender:'assistant',model:response.data.model,serverType:response.data.serverType,modelVersion:response.data.modelVersion||'unknown',modelSelectionReason:response.data.modelSelectionReason||'Default model selection',usingMock:response.data.usingMock||false};// Update available models if they're returned in the response\nif(response.data.availableModels&&response.data.availableModels.length>0){setAvailableModels(response.data.availableModels);}setMessages(prevMessages=>[...prevMessages,assistantMessage]);}catch(error){console.error('Error sending message:',error);// Add detailed logging for debugging\nif(error.response){// The request was made and the server responded with a status code\n// that falls out of the range of 2xx\nconsole.error('Error response data:',error.response.data);console.error('Error response status:',error.response.status);console.error('Error response headers:',error.response.headers);}else if(error.request){// The request was made but no response was received\nconsole.error('Error request:',error.request);}else{// Something happened in setting up the request that triggered an Error\nconsole.error('Error message:',error.message);}// Add error message\nconst errorMessage={text:'Sorry, there was an error processing your request. Please try again. (Error: '+(error.message||'Unknown')+')',sender:'assistant'};setMessages(prevMessages=>[...prevMessages,errorMessage]);}finally{setIsLoading(false);}};const handleSubmit=e=>{e.preventDefault();sendMessage(input);};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"AI-Powered Smart Retail Assistant\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Using Model Context Protocol (MCP) with Azure OpenAI models\"}),availableModels.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"model-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"model-select\",children:\"Select AI Model: \"}),\"              \",/*#__PURE__*/_jsxs(\"select\",{id:\"model-select\",value:selectedModel,onChange:e=>setSelectedModel(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Default (Auto-select by Query Type)\"}),availableModels.map(model=>/*#__PURE__*/_jsxs(\"option\",{value:model.id,children:[model.name,\" - \",model.description,model.strengths&&model.strengths.length>0?\" (Best for: \".concat(model.strengths.join(\", \"),\")\"):\"\"]},model.id))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"messages\",children:[messages.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"message assistant\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Hello! I'm your AI retail assistant. How can I help you today?\"})}),messages.map((message,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(message.sender),children:[/*#__PURE__*/_jsx(\"p\",{children:message.text}),message.model&&/*#__PURE__*/_jsxs(\"div\",{className:\"model-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"model-badge\",children:message.model}),message.modelVersion!=='unknown'&&/*#__PURE__*/_jsxs(\"span\",{className:\"model-version\",children:[\"v\",message.modelVersion]}),/*#__PURE__*/_jsxs(\"span\",{className:\"server-type\",children:[\"via \",message.serverType,\" MCP Server\"]}),message.usingMock&&/*#__PURE__*/_jsx(\"span\",{className:\"mock-indicator\",children:\"(Using Simulated Response)\"}),message.modelSelectionReason&&/*#__PURE__*/_jsx(\"div\",{className:\"model-selection-reason\",children:message.modelSelectionReason})]})]},index)),isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"typing-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"input-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:e=>setInput(e.target.value),placeholder:\"Ask me about products, inventory, or promotions...\",disabled:isLoading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading||!input.trim(),children:\"Send\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"scenario-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Demo Scenarios\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click on any example to try it:\"}),scenarios.map((scenario,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"scenario-example\",onClick:()=>sendMessage(scenario),children:scenario},index))]})]});}export default App;","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsx","_jsx","jsxs","_jsxs","App","messages","setMessages","input","setInput","isLoading","setIsLoading","availableModels","setAvailableModels","selectedModel","setSelectedModel","messagesEndRef","apiUrl","console","log","scenarios","fetchModels","response","get","concat","data","models","error","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","messageText","trim","userMessage","text","sender","prevMessages","post","query","customerName","preferredModel","undefined","assistantMessage","model","serverType","modelVersion","modelSelectionReason","usingMock","length","status","headers","request","message","errorMessage","handleSubmit","e","preventDefault","className","children","htmlFor","id","value","onChange","target","map","name","description","strengths","join","index","ref","onSubmit","type","placeholder","disabled","scenario","onClick"],"sources":["/afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/client/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [availableModels, setAvailableModels] = useState([]);\n  const [selectedModel, setSelectedModel] = useState('');\n  const messagesEndRef = useRef(null);\n  \n  // Force the API URL to the correct server port\n  const apiUrl = 'http://localhost:3005/api';\n  \n  // Log the API URL for debugging\n  console.log('Using API URL:', apiUrl);\n  \n  // Example scenarios\n  const scenarios = [\n    \"I'm looking for sustainable skincare products. Can you recommend something?\",\n    \"Is the organic aloe vera moisturizer currently in stock?\",\n    \"What promotions do you have for eco-friendly products?\",\n    \"Can you tell me about my past purchases?\"\n  ];\n\n  // Fetch available models when component mounts\n  useEffect(() => {\n    const fetchModels = async () => {\n      try {\n        const response = await axios.get(`${apiUrl}/models`);\n        setAvailableModels(response.data.models || []);\n        console.log('Available models:', response.data.models);\n      } catch (error) {\n        console.error('Error fetching models:', error);\n      }\n    };\n    \n    fetchModels();\n  }, [apiUrl]);\n  \n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  \n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  const sendMessage = async (messageText) => {\n    if (!messageText.trim()) return;\n    \n    // Add user message to the chat\n    const userMessage = {\n      text: messageText,\n      sender: 'user'\n    };\n    \n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    \n    try {\n      // Send the message to the API\n      const response = await axios.post(`${apiUrl}/inquiry`, {\n        query: messageText,\n        customerName: 'Alice Johnson', // Default customer for demo\n        preferredModel: selectedModel || undefined\n      });\n      \n      // Add assistant response to the chat\n      const assistantMessage = {\n        text: response.data.response,\n        sender: 'assistant',\n        model: response.data.model,\n        serverType: response.data.serverType,\n        modelVersion: response.data.modelVersion || 'unknown',\n        modelSelectionReason: response.data.modelSelectionReason || 'Default model selection',\n        usingMock: response.data.usingMock || false\n      };\n      \n      // Update available models if they're returned in the response\n      if (response.data.availableModels && response.data.availableModels.length > 0) {\n        setAvailableModels(response.data.availableModels);\n      }\n      \n      setMessages(prevMessages => [...prevMessages, assistantMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      \n      // Add detailed logging for debugging\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error('Error response data:', error.response.data);\n        console.error('Error response status:', error.response.status);\n        console.error('Error response headers:', error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error('Error request:', error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Error message:', error.message);\n      }\n      \n      // Add error message\n      const errorMessage = {\n        text: 'Sorry, there was an error processing your request. Please try again. (Error: ' + (error.message || 'Unknown') + ')',\n        sender: 'assistant'\n      };\n      \n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    sendMessage(input);\n  };\n  \n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>AI-Powered Smart Retail Assistant</h1>\n        <p>Using Model Context Protocol (MCP) with Azure OpenAI models</p>\n        \n        {availableModels.length > 0 && (\n          <div className=\"model-selector\">\n            <label htmlFor=\"model-select\">Select AI Model: </label>              <select \n              id=\"model-select\"\n              value={selectedModel}\n              onChange={(e) => setSelectedModel(e.target.value)}\n            >\n              <option value=\"\">Default (Auto-select by Query Type)</option>\n              {availableModels.map(model => (\n                <option key={model.id} value={model.id}>\n                  {model.name} - {model.description}\n                  {model.strengths && model.strengths.length > 0 ? \n                    ` (Best for: ${model.strengths.join(\", \")})` : \n                    \"\"}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n      </header>\n      \n      <div className=\"chat-container\">\n        <div className=\"messages\">\n          {messages.length === 0 && (\n            <div className=\"message assistant\">\n              <p>Hello! I'm your AI retail assistant. How can I help you today?</p>\n            </div>\n          )}\n          \n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              <p>{message.text}</p>\n              {message.model && (\n                <div className=\"model-info\">\n                  <span className=\"model-badge\">\n                    {message.model}\n                  </span>\n                  {message.modelVersion !== 'unknown' && \n                    <span className=\"model-version\">v{message.modelVersion}</span>\n                  }\n                  <span className=\"server-type\">via {message.serverType} MCP Server</span>\n                  {message.usingMock && \n                    <span className=\"mock-indicator\">(Using Simulated Response)</span>\n                  }\n                  {message.modelSelectionReason && \n                    <div className=\"model-selection-reason\">{message.modelSelectionReason}</div>\n                  }\n                </div>\n              )}\n            </div>\n          ))}\n          \n          {isLoading && (\n            <div className=\"typing-indicator\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          )}\n          \n          <div ref={messagesEndRef} />\n        </div>\n        \n        <form className=\"input-form\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Ask me about products, inventory, or promotions...\"\n            disabled={isLoading}\n          />\n          <button type=\"submit\" disabled={isLoading || !input.trim()}>\n            Send\n          </button>\n        </form>\n      </div>\n      \n      <div className=\"scenario-section\">\n        <h2>Demo Scenarios</h2>\n        <p>Click on any example to try it:</p>\n        \n        {scenarios.map((scenario, index) => (\n          <div \n            key={index} \n            className=\"scenario-example\"\n            onClick={() => sendMessage(scenario)}\n          >\n            {scenario}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}