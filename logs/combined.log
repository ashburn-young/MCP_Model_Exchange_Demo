2025-05-17T01:35:26.841Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T01:35:26.843Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T01:35:26.855Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T01:35:26.862Z [INFO]: Server running on port 3002 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T01:35:26.937Z [ERROR]: Marketing Optimization MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/server/index.js:35
        this._capabilities = options.capabilities;
                                     ^

TypeError: Cannot read properties of undefined (reading 'capabilities')
    at new Server (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/server/index.js:35:38)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:190:16
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:35:26.938Z [ERROR]: Marketing Optimization MCP Error: 
Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:35:26.946Z [WARN]: Marketing Optimization MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:35:26.965Z [ERROR]: Customer Preferences MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/server/index.js:35
        this._capabilities = options.capabilities;
                                     ^

TypeError: Cannot read properties of undefined (reading 'capabilities')
    at new Server (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/server/index.js:35:38)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:115:16
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:35:26.969Z [WARN]: Customer Preferences MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:35:26.975Z [ERROR]: Inventory Analytics MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/server/index.js:35
        this._capabilities = options.capabilities;
                                     ^

TypeError: Cannot read properties of undefined (reading 'capabilities')
    at new Server (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/server/index.js:35:38)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:139:16
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:35:26.979Z [WARN]: Inventory Analytics MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:35:28.859Z [ERROR]: All MCP servers have exited with errors - will use mock responses only {
  "service": "smart-retail-assistant"
}
2025-05-17T01:35:47.651Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::ffff:127.0.0.1",
  "modelsCount": 5
}
2025-05-17T01:35:47.653Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "5ms",
  "userAgent": "curl/7.88.1",
  "query": {}
}
2025-05-17T01:36:12.730Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T01:36:12.733Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T01:36:12.745Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T01:36:12.751Z [INFO]: Server running on port 3002 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T01:36:12.839Z [ERROR]: Inventory Analytics MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/server/index.js:35
        this._capabilities = options.capabilities;
                                     ^

TypeError: Cannot read properties of undefined (reading 'capabilities')
    at new Server (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/server/index.js:35:38)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:139:16
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:36:12.847Z [ERROR]: Customer Preferences MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/server/index.js:35
        this._capabilities = options.capabilities;
                                     ^

TypeError: Cannot read properties of undefined (reading 'capabilities')
    at new Server (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/server/index.js:35:38)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:115:16
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:36:12.849Z [ERROR]: Customer Preferences MCP Error: 
Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:36:12.852Z [ERROR]: Marketing Optimization MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/server/index.js:35
        this._capabilities = options.capabilities;
                                     ^

TypeError: Cannot read properties of undefined (reading 'capabilities')
    at new Server (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/server/index.js:35:38)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:190:16
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:36:12.856Z [WARN]: Inventory Analytics MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:36:12.857Z [WARN]: Marketing Optimization MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:36:12.859Z [WARN]: Customer Preferences MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:36:14.749Z [ERROR]: All MCP servers have exited with errors - will use mock responses only {
  "service": "smart-retail-assistant"
}
2025-05-17T01:36:27.017Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::ffff:127.0.0.1",
  "modelsCount": 5
}
2025-05-17T01:36:27.018Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "4ms",
  "userAgent": "curl/7.88.1",
  "query": {}
}
2025-05-17T01:36:33.245Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=213de00a-ae40-4d69-af30-7eab5efc1022&vscodeBrowserReqId=1747445785355",
  "statusCode": 200,
  "responseTime": "5ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "213de00a-ae40-4d69-af30-7eab5efc1022",
    "vscodeBrowserReqId": "1747445785355"
  }
}
2025-05-17T01:36:33.448Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.d3c378e2.js",
  "statusCode": 304,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T01:36:33.449Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.41259d03.css",
  "statusCode": 304,
  "responseTime": "3ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T01:36:48.472Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.41259d03.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T01:36:48.534Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 304,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T01:37:57.016Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=213de00a-ae40-4d69-af30-7eab5efc1022&vscodeBrowserReqId=1747445872930",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "213de00a-ae40-4d69-af30-7eab5efc1022",
    "vscodeBrowserReqId": "1747445872930"
  }
}
2025-05-17T01:37:57.190Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.d3c378e2.js",
  "statusCode": 304,
  "responseTime": "0ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T01:37:57.771Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.41259d03.css",
  "statusCode": 304,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T01:38:38.182Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T01:38:38.184Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T01:38:38.207Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T01:38:38.213Z [INFO]: Server running on port 3002 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T01:38:38.291Z [ERROR]: Inventory Analytics MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:169
server.onCallTool(CHECK_INVENTORY_TOOL.name, async (params) => {
       ^

TypeError: server.onCallTool is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:169:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:38:38.299Z [WARN]: Inventory Analytics MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:38:38.300Z [ERROR]: Customer Preferences MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:142
server.onCallTool(GET_CUSTOMER_PREFERENCES_TOOL.name, async (params) => {
       ^

TypeError: server.onCallTool is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:142:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:38:38.305Z [WARN]: Customer Preferences MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:38:38.315Z [ERROR]: Marketing Optimization MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:207
server.onCallTool(GET_ACTIVE_PROMOTIONS_TOOL.name, async (params) => {
       ^

TypeError: server.onCallTool is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:207:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:38:38.323Z [WARN]: Marketing Optimization MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T01:38:40.211Z [ERROR]: All MCP servers have exited with errors - will use mock responses only {
  "service": "smart-retail-assistant"
}
2025-05-17T01:40:19.433Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::ffff:127.0.0.1",
  "modelsCount": 5
}
2025-05-17T01:40:19.435Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "5ms",
  "userAgent": "curl/7.88.1",
  "query": {}
}
2025-05-17T01:40:28.707Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=213de00a-ae40-4d69-af30-7eab5efc1022&vscodeBrowserReqId=1747446021759",
  "statusCode": 200,
  "responseTime": "5ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "213de00a-ae40-4d69-af30-7eab5efc1022",
    "vscodeBrowserReqId": "1747446021759"
  }
}
2025-05-17T01:40:28.877Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.d3c378e2.js",
  "statusCode": 304,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T01:40:28.878Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.41259d03.css",
  "statusCode": 304,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T01:41:15.537Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4"
}
2025-05-17T01:41:15.538Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4",
  "serverType": "Inventory Analytics"
}
2025-05-17T01:41:15.600Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T01:41:15.600Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T01:41:15.867Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T01:41:15.868Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T01:41:16.221Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "684ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T01:41:24.444Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "requestedModel": "gpt-4.5-preview",
  "selectedModel": "gpt-4.5-preview"
}
2025-05-17T01:41:24.444Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T01:41:31.980Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "7536ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson",
    "preferredModel": "gpt-4.5-preview"
  }
}
2025-05-17T01:41:53.367Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "requestedModel": "gpt-4",
  "selectedModel": "gpt-4"
}
2025-05-17T01:41:53.368Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4",
  "serverType": "Inventory Analytics"
}
2025-05-17T01:41:54.009Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "641ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson",
    "preferredModel": "gpt-4"
  }
}
2025-05-17T01:43:46.592Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "serverType": "Customer Preferences",
  "requestedModel": "gpt-4o",
  "selectedModel": "gpt-4o"
}
2025-05-17T01:43:46.593Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T01:43:50.245Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "3653ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "I'm looking for sustainable skincare products. Can you recommend something?",
    "customerName": "Alice Johnson",
    "preferredModel": "gpt-4o"
  }
}
2025-05-17T01:43:52.927Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "requestedModel": "gpt-4o",
  "selectedModel": "gpt-4o"
}
2025-05-17T01:43:52.927Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4o",
  "serverType": "Inventory Analytics"
}
2025-05-17T01:43:53.429Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "503ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson",
    "preferredModel": "gpt-4o"
  }
}
2025-05-17T01:43:57.270Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "requestedModel": "gpt-4o",
  "selectedModel": "gpt-4o"
}
2025-05-17T01:43:57.270Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4o",
  "serverType": "Marketing Optimization"
}
2025-05-17T01:43:59.247Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "1977ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson",
    "preferredModel": "gpt-4o"
  }
}
2025-05-17T01:44:10.614Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "requestedModel": "gpt-4.5-preview",
  "selectedModel": "gpt-4.5-preview"
}
2025-05-17T01:44:10.614Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T01:44:17.616Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "7002ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson",
    "preferredModel": "gpt-4.5-preview"
  }
}
2025-05-17T01:44:23.228Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "requestedModel": "gpt-4.5-preview",
  "selectedModel": "gpt-4.5-preview"
}
2025-05-17T01:44:23.228Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4.5-preview",
  "serverType": "Inventory Analytics"
}
2025-05-17T01:44:29.740Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "6512ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson",
    "preferredModel": "gpt-4.5-preview"
  }
}
2025-05-17T01:55:15.629Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T01:55:15.630Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T01:55:16.621Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T01:55:16.621Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T01:57:23.571Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-35-turbo"
}
2025-05-17T01:57:23.571Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-35-turbo",
  "serverType": "Marketing Optimization"
}
2025-05-17T01:57:24.144Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "573ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T01:57:31.956Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "suggest stylish laptop bags with good reviews.",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o"
}
2025-05-17T01:57:31.956Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "suggest stylish laptop bags with good reviews.",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T01:57:38.769Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "6814ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "suggest stylish laptop bags with good reviews.",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T01:58:17.629Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T01:58:17.630Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T01:58:17.963Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T01:58:17.964Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T01:58:17.965Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you analyze customer purchase trends based on seasonal demand?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o"
}
2025-05-17T01:58:17.965Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you analyze customer purchase trends based on seasonal demand?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T01:58:19.645Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "1680ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Can you analyze customer purchase trends based on seasonal demand?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T01:58:44.762Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "find me eco-friendly shoes with free shipping.",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o"
}
2025-05-17T01:58:44.762Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "find me eco-friendly shoes with free shipping.",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T01:58:46.846Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "2084ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "find me eco-friendly shoes with free shipping.",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T01:59:15.731Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "find me eco-friendly shoes with free shipping.",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o"
}
2025-05-17T01:59:15.731Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "find me eco-friendly shoes with free shipping.",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T01:59:16.944Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "1213ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "find me eco-friendly shoes with free shipping.",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T01:59:30.332Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T01:59:30.332Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T01:59:30.551Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T01:59:30.552Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T01:59:35.200Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Suggest stylish laptop bags with good reviews.",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o"
}
2025-05-17T01:59:35.200Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Suggest stylish laptop bags with good reviews.",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T01:59:39.863Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "4663ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Suggest stylish laptop bags with good reviews.",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T01:59:44.682Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o"
}
2025-05-17T01:59:44.682Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T01:59:45.511Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "829ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Can you tell me about my past purchases?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T01:59:47.762Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-35-turbo"
}
2025-05-17T01:59:47.762Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-35-turbo",
  "serverType": "Marketing Optimization"
}
2025-05-17T01:59:48.320Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "558ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T01:59:50.700Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4"
}
2025-05-17T01:59:50.701Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4",
  "serverType": "Inventory Analytics"
}
2025-05-17T01:59:51.927Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "1227ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T01:59:53.241Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o"
}
2025-05-17T01:59:53.242Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T01:59:56.476Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "3234ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "I'm looking for sustainable skincare products. Can you recommend something?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T01:59:59.446Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o"
}
2025-05-17T01:59:59.447Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T02:00:00.390Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "944ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Can you tell me about my past purchases?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T02:00:09.425Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4"
}
2025-05-17T02:00:09.426Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4",
  "serverType": "Inventory Analytics"
}
2025-05-17T02:00:10.412Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "987ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T02:00:15.850Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T02:00:15.852Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T02:00:15.862Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T02:00:15.868Z [INFO]: Server running on port 3002 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T02:00:15.946Z [ERROR]: Inventory Analytics MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320
        const method = requestSchema.shape.method.value;
                                           ^

TypeError: Cannot read properties of undefined (reading 'method')
    at Server.setRequestHandler (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320:44)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:169:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:00:15.947Z [ERROR]: Inventory Analytics MCP Error: 
Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:00:15.960Z [ERROR]: Customer Preferences MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320
        const method = requestSchema.shape.method.value;
                                           ^

TypeError: Cannot read properties of undefined (reading 'method')
    at Server.setRequestHandler (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320:44)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:142:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:00:15.963Z [WARN]: Inventory Analytics MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:00:15.967Z [WARN]: Customer Preferences MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:00:15.979Z [ERROR]: Marketing Optimization MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320
        const method = requestSchema.shape.method.value;
                                           ^

TypeError: Cannot read properties of undefined (reading 'method')
    at Server.setRequestHandler (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320:44)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:207:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:00:15.982Z [WARN]: Marketing Optimization MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:00:17.865Z [ERROR]: All MCP servers have exited with errors - will use mock responses only {
  "service": "smart-retail-assistant"
}
2025-05-17T02:02:09.195Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o"
}
2025-05-17T02:02:09.195Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T02:02:10.107Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T02:02:10.110Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T02:02:10.123Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T02:02:10.129Z [INFO]: Server running on port 3002 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T02:02:10.205Z [ERROR]: Customer Preferences MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320
        const method = requestSchema.shape.method.value;
                                           ^

TypeError: Cannot read properties of undefined (reading 'method')
    at Server.setRequestHandler (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320:44)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:142:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:02:10.211Z [WARN]: Customer Preferences MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:02:10.222Z [ERROR]: Inventory Analytics MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320
        const method = requestSchema.shape.method.value;
                                           ^

TypeError: Cannot read properties of undefined (reading 'method')
    at Server.setRequestHandler (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320:44)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:169:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:02:10.224Z [ERROR]: Inventory Analytics MCP Error: 
Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:02:10.228Z [WARN]: Inventory Analytics MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:02:10.240Z [ERROR]: Marketing Optimization MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320
        const method = requestSchema.shape.method.value;
                                           ^

TypeError: Cannot read properties of undefined (reading 'method')
    at Server.setRequestHandler (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320:44)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:207:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:02:10.244Z [WARN]: Marketing Optimization MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:02:12.125Z [ERROR]: All MCP servers have exited with errors - will use mock responses only {
  "service": "smart-retail-assistant"
}
2025-05-17T02:02:17.263Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o"
}
2025-05-17T02:02:17.263Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T02:02:18.175Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "913ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Can you tell me about my past purchases?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T02:02:31.080Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4"
}
2025-05-17T02:02:31.080Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4",
  "serverType": "Inventory Analytics"
}
2025-05-17T02:02:31.711Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "631ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T02:02:33.871Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o"
}
2025-05-17T02:02:33.871Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T02:02:34.654Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "782ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Can you tell me about my past purchases?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T02:02:37.233Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o"
}
2025-05-17T02:02:37.234Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T02:02:39.990Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "2757ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "I'm looking for sustainable skincare products. Can you recommend something?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T02:02:41.790Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-35-turbo"
}
2025-05-17T02:02:41.790Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-35-turbo",
  "serverType": "Marketing Optimization"
}
2025-05-17T02:02:42.420Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "630ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T02:04:38.825Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "find me sustainable sneakers",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o"
}
2025-05-17T02:04:38.825Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "find me sustainable sneakers",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T02:04:41.777Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "2952ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "find me sustainable sneakers",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T02:05:10.056Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "which smart refridgerators have AI features?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o"
}
2025-05-17T02:05:10.057Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "which smart refridgerators have AI features?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T02:05:13.634Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "3578ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "which smart refridgerators have AI features?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T02:07:59.827Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T02:07:59.827Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T02:08:00.287Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T02:08:00.288Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T02:08:02.442Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o"
}
2025-05-17T02:08:02.443Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T02:08:05.545Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "3103ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "I'm looking for sustainable skincare products. Can you recommend something?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T02:08:08.085Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-35-turbo"
}
2025-05-17T02:08:08.085Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-35-turbo",
  "serverType": "Marketing Optimization"
}
2025-05-17T02:08:08.670Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "585ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T02:08:10.713Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4"
}
2025-05-17T02:08:10.713Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4",
  "serverType": "Inventory Analytics"
}
2025-05-17T02:08:11.405Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "692ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T02:08:12.275Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o"
}
2025-05-17T02:08:12.275Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T02:08:13.114Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "839ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Can you tell me about my past purchases?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T02:22:36.440Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T02:22:36.442Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T02:22:36.451Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T02:22:36.459Z [INFO]: Server running on port 3002 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T02:22:36.524Z [ERROR]: Inventory Analytics MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320
        const method = requestSchema.shape.method.value;
                                           ^

TypeError: Cannot read properties of undefined (reading 'method')
    at Server.setRequestHandler (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320:44)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:176:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:22:36.529Z [WARN]: Inventory Analytics MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:22:36.542Z [ERROR]: Customer Preferences MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320
        const method = requestSchema.shape.method.value;
                                           ^

TypeError: Cannot read properties of undefined (reading 'method')
    at Server.setRequestHandler (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320:44)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:149:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:22:36.545Z [WARN]: Customer Preferences MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:22:36.547Z [ERROR]: Marketing Optimization MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320
        const method = requestSchema.shape.method.value;
                                           ^

TypeError: Cannot read properties of undefined (reading 'method')
    at Server.setRequestHandler (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320:44)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:214:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:22:36.549Z [WARN]: Marketing Optimization MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:22:38.455Z [ERROR]: All MCP servers have exited with errors - will use mock responses only {
  "service": "smart-retail-assistant"
}
2025-05-17T02:23:25.570Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=4454e87d-c5d5-4bfb-a4e7-cf227f2cd442&vscodeBrowserReqId=1747448600925",
  "statusCode": 200,
  "responseTime": "5ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "4454e87d-c5d5-4bfb-a4e7-cf227f2cd442",
    "vscodeBrowserReqId": "1747448600925"
  }
}
2025-05-17T02:23:25.730Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.41259d03.css",
  "statusCode": 304,
  "responseTime": "3ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T02:23:25.731Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.d3c378e2.js",
  "statusCode": 304,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T02:29:04.639Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::ffff:127.0.0.1",
  "modelsCount": 5
}
2025-05-17T02:29:04.640Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "3ms",
  "userAgent": "curl/7.88.1",
  "query": {}
}
2025-05-17T02:29:04.680Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Tell me about my purchase history",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T02:29:04.680Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Tell me about my purchase history",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T02:29:05.436Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "757ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "Tell me about my purchase history"
  }
}
2025-05-17T02:29:05.447Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Tell me about my purchase history",
  "serverType": "Customer Preferences",
  "requestedModel": "gpt-4",
  "selectedModel": "gpt-4",
  "dynamicSelection": false,
  "modelSelectionReason": "User-selected model (gpt-4)"
}
2025-05-17T02:29:05.447Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Tell me about my purchase history",
  "model": "gpt-4",
  "serverType": "Customer Preferences"
}
2025-05-17T02:29:06.815Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "1368ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "Tell me about my purchase history",
    "preferredModel": "gpt-4"
  }
}
2025-05-17T02:29:06.827Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Tell me about my purchase history",
  "serverType": "Customer Preferences",
  "requestedModel": "gpt-35-turbo",
  "selectedModel": "gpt-35-turbo",
  "dynamicSelection": false,
  "modelSelectionReason": "User-selected model (gpt-35-turbo)"
}
2025-05-17T02:29:06.827Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Tell me about my purchase history",
  "model": "gpt-35-turbo",
  "serverType": "Customer Preferences"
}
2025-05-17T02:29:07.284Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "457ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "Tell me about my purchase history",
    "preferredModel": "gpt-35-turbo"
  }
}
2025-05-17T02:29:07.294Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "I need a complex analysis of my purchase history",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for complex analysis capabilities"
}
2025-05-17T02:29:07.294Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "I need a complex analysis of my purchase history",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T02:29:08.261Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "967ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "I need a complex analysis of my purchase history"
  }
}
2025-05-17T02:29:08.272Z [WARN]: Invalid model requested: invalid-model {
  "service": "smart-retail-assistant"
}
2025-05-17T02:29:08.274Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 400,
  "responseTime": "1ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "Tell me about my purchase history",
    "preferredModel": "invalid-model"
  }
}
2025-05-17T02:29:50.470Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::ffff:127.0.0.1",
  "modelsCount": 5
}
2025-05-17T02:29:50.470Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "curl/7.88.1",
  "query": {}
}
2025-05-17T02:29:50.502Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Tell me about my purchase history",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T02:29:50.503Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Tell me about my purchase history",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T02:29:51.400Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "898ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "Tell me about my purchase history"
  }
}
2025-05-17T02:29:51.412Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Tell me about my purchase history",
  "serverType": "Customer Preferences",
  "requestedModel": "gpt-4",
  "selectedModel": "gpt-4",
  "dynamicSelection": false,
  "modelSelectionReason": "User-selected model (gpt-4)"
}
2025-05-17T02:29:51.413Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Tell me about my purchase history",
  "model": "gpt-4",
  "serverType": "Customer Preferences"
}
2025-05-17T02:29:52.543Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "1131ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "Tell me about my purchase history",
    "preferredModel": "gpt-4"
  }
}
2025-05-17T02:29:52.554Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Tell me about my purchase history",
  "serverType": "Customer Preferences",
  "requestedModel": "gpt-35-turbo",
  "selectedModel": "gpt-35-turbo",
  "dynamicSelection": false,
  "modelSelectionReason": "User-selected model (gpt-35-turbo)"
}
2025-05-17T02:29:52.555Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Tell me about my purchase history",
  "model": "gpt-35-turbo",
  "serverType": "Customer Preferences"
}
2025-05-17T02:29:53.049Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "495ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "Tell me about my purchase history",
    "preferredModel": "gpt-35-turbo"
  }
}
2025-05-17T02:29:53.060Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "I need a complex analysis of my purchase history",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for complex analysis capabilities"
}
2025-05-17T02:29:53.061Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "I need a complex analysis of my purchase history",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T02:29:54.180Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "1120ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "I need a complex analysis of my purchase history"
  }
}
2025-05-17T02:29:54.197Z [WARN]: Invalid model requested: invalid-model {
  "service": "smart-retail-assistant"
}
2025-05-17T02:29:54.200Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 400,
  "responseTime": "3ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "Tell me about my purchase history",
    "preferredModel": "invalid-model"
  }
}
2025-05-17T02:29:54.227Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Create a summer promotion campaign for our eco-friendly products",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T02:29:54.227Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Create a summer promotion campaign for our eco-friendly products",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T02:30:33.099Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "38872ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "Create a summer promotion campaign for our eco-friendly products"
  }
}
2025-05-17T02:30:33.111Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Check stock",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4.1",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for advanced reasoning capabilities"
}
2025-05-17T02:30:33.112Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Check stock",
  "model": "gpt-4.1",
  "serverType": "Inventory Analytics"
}
2025-05-17T02:30:33.494Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "383ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "Check stock"
  }
}
2025-05-17T02:30:44.269Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::ffff:127.0.0.1",
  "modelsCount": 5
}
2025-05-17T02:30:44.270Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "curl/7.88.1",
  "query": {}
}
2025-05-17T02:30:54.348Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=bc499711-df93-44b1-8513-9035e211fa78&vscodeBrowserReqId=1747449048332",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "bc499711-df93-44b1-8513-9035e211fa78",
    "vscodeBrowserReqId": "1747449048332"
  }
}
2025-05-17T02:30:54.511Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.d3c378e2.js",
  "statusCode": 304,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T02:30:54.512Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.41259d03.css",
  "statusCode": 304,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T02:34:51.277Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 304,
  "responseTime": "0ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:34:51.548Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.d3c378e2.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:34:51.550Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.41259d03.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:34:51.912Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 304,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:34:55.898Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:34:56.038Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:35:07.294Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T02:35:07.438Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.41259d03.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T02:36:58.075Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:36:58.257Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.41259d03.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:36:58.258Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.d3c378e2.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:36:58.477Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:37:01.728Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:37:01.866Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:38:24.179Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:38:24.407Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.d3c378e2.js",
  "statusCode": 304,
  "responseTime": "0ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:38:24.417Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.41259d03.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:38:24.607Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:38:28.912Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:38:29.052Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:41:31.038Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:41:31.256Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.d3c378e2.js",
  "statusCode": 304,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:41:31.256Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.41259d03.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:41:31.467Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:41:35.356Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:41:35.500Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:42:17.774Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:42:17.945Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.d3c378e2.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:42:22.084Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.41259d03.css",
  "statusCode": 304,
  "responseTime": "0ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:42:22.359Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:42:22.360Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 304,
  "responseTime": "3ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:42:22.493Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T02:45:27.892Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T02:45:27.894Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T02:45:27.906Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T02:45:27.913Z [INFO]: Server running on port 3002 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T02:45:27.984Z [ERROR]: Inventory Analytics MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320
        const method = requestSchema.shape.method.value;
                                           ^

TypeError: Cannot read properties of undefined (reading 'method')
    at Server.setRequestHandler (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320:44)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:228:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:45:27.987Z [ERROR]: Inventory Analytics MCP Error: 
Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:45:28.002Z [WARN]: Inventory Analytics MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:45:28.014Z [ERROR]: Customer Preferences MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320
        const method = requestSchema.shape.method.value;
                                           ^

TypeError: Cannot read properties of undefined (reading 'method')
    at Server.setRequestHandler (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320:44)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:188:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:45:28.019Z [WARN]: Customer Preferences MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:45:28.020Z [ERROR]: Marketing Optimization MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320
        const method = requestSchema.shape.method.value;
                                           ^

TypeError: Cannot read properties of undefined (reading 'method')
    at Server.setRequestHandler (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:320:44)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:255:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:45:28.024Z [WARN]: Marketing Optimization MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:45:29.910Z [ERROR]: All MCP servers have exited with errors - will use mock responses only {
  "service": "smart-retail-assistant"
}
2025-05-17T02:52:14.644Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T02:52:14.646Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T02:52:14.657Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T02:52:14.663Z [INFO]: Server running on port 3002 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T02:52:14.731Z [ERROR]: Customer Preferences MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/server/index.js:129
                    throw new Error(`Server does not support tools (required for ${method})`);
                          ^

Error: Server does not support tools (required for tools/call)
    at Server.assertRequestHandlerCapability (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/server/index.js:129:27)
    at Server.setRequestHandler (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:321:14)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:182:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:52:14.733Z [ERROR]: Customer Preferences MCP Error: 
Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:52:14.734Z [ERROR]: Inventory Analytics MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/server/index.js:129
                    throw new Error(`Server does not support tools (required for ${method})`);
                          ^

Error: Server does not support tools (required for tools/call)
    at Server.assertRequestHandlerCapability (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/server/index.js:129:27)
    at Server.setRequestHandler (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:321:14)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:222:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:52:14.739Z [ERROR]: Marketing Optimization MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/server/index.js:129
                    throw new Error(`Server does not support tools (required for ${method})`);
                          ^

Error: Server does not support tools (required for tools/call)
    at Server.assertRequestHandlerCapability (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/server/index.js:129:27)
    at Server.setRequestHandler (file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/node_modules/@modelcontextprotocol/sdk/dist/esm/shared/protocol.js:321:14)
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:249:8
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:52:14.740Z [WARN]: Inventory Analytics MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:52:14.741Z [WARN]: Customer Preferences MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:52:14.742Z [WARN]: Marketing Optimization MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T02:52:16.660Z [ERROR]: All MCP servers have exited with errors - will use mock responses only {
  "service": "smart-retail-assistant"
}
2025-05-17T03:00:29.657Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T03:00:29.659Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T03:00:29.671Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T03:00:29.680Z [INFO]: Server running on port 3002 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T03:00:29.741Z [ERROR]: Inventory Analytics MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:359
transport.listen(server);
          ^

TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:359:11
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T03:00:29.744Z [ERROR]: Inventory Analytics MCP Error: 
Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T03:00:29.751Z [WARN]: Inventory Analytics MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T03:00:29.753Z [ERROR]: Customer Preferences MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:309
transport.listen(server);
          ^

TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:309:11
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T03:00:29.760Z [WARN]: Customer Preferences MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T03:00:29.769Z [ERROR]: Marketing Optimization MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:446
transport.listen(server);
          ^

TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:446:11
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T03:00:29.772Z [WARN]: Marketing Optimization MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T03:00:31.675Z [ERROR]: All MCP servers have exited with errors - will use mock responses only {
  "service": "smart-retail-assistant"
}
2025-05-17T09:09:40.652Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T09:09:40.654Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:09:40.667Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T09:09:40.672Z [INFO]: Server running on port 3002 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T09:09:40.743Z [ERROR]: Customer Preferences MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:311
transport.listen(server);
          ^

TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:311:11
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:09:40.745Z [ERROR]: Customer Preferences MCP Error: 
Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:09:40.749Z [ERROR]: Inventory Analytics MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:361
transport.listen(server);
          ^

TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:361:11
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:09:40.752Z [ERROR]: Marketing Optimization MCP Error: file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:448
transport.listen(server);
          ^

TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:448:11
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)

Node.js v20.19.1
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:09:40.754Z [WARN]: Customer Preferences MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:09:40.755Z [WARN]: Inventory Analytics MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:09:40.758Z [WARN]: Marketing Optimization MCP exited with code 1 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:09:42.670Z [ERROR]: All MCP servers have exited with errors - will use mock responses only {
  "service": "smart-retail-assistant"
}
2025-05-17T09:15:24.700Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T09:15:24.702Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:15:24.712Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T09:15:24.717Z [INFO]: Server running on port 3002 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T09:15:24.792Z [ERROR]: Customer Preferences MCP Error: Failed to start MCP server: TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:312:13
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:15:24.794Z [ERROR]: Inventory Analytics MCP Error: Failed to start MCP server: TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:362:13
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:15:24.800Z [WARN]: Customer Preferences MCP exited with code 0 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:15:24.801Z [INFO]: Restarting Customer Preferences MCP server... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:15:24.807Z [WARN]: Inventory Analytics MCP exited with code 0 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:15:24.808Z [INFO]: Restarting Inventory Analytics MCP server... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:15:24.815Z [ERROR]: Marketing Optimization MCP Error: Failed to start MCP server: TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:449:13
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:15:24.816Z [WARN]: Marketing Optimization MCP exited with code 0 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:15:24.817Z [INFO]: Restarting Marketing Optimization MCP server... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:19:01.834Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T09:19:01.836Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:19:01.844Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T09:19:01.853Z [INFO]: Server running on port 3002 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T09:19:01.920Z [ERROR]: Customer Preferences MCP Error: Failed to start MCP server: TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:312:13
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:19:01.921Z [ERROR]: Inventory Analytics MCP Error: Failed to start MCP server: TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:362:13
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:19:01.925Z [ERROR]: Marketing Optimization MCP Error: Failed to start MCP server: TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:449:13
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:19:01.928Z [WARN]: Customer Preferences MCP exited with code 0 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:19:01.929Z [INFO]: Restarting Customer Preferences MCP server... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:19:01.932Z [WARN]: Inventory Analytics MCP exited with code 0 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:19:01.932Z [INFO]: Restarting Inventory Analytics MCP server... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:19:01.935Z [WARN]: Marketing Optimization MCP exited with code 0 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:19:01.936Z [INFO]: Restarting Marketing Optimization MCP server... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:32:51.985Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T09:32:51.987Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:32:51.996Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T09:32:52.004Z [INFO]: Server running on port 3002 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T09:32:52.075Z [ERROR]: Inventory Analytics MCP Error: Failed to start MCP server: TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:357:13
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:32:52.083Z [ERROR]: Customer Preferences MCP Error: Failed to start MCP server: TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:307:13
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:32:52.085Z [WARN]: Inventory Analytics MCP exited with code 0 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:32:52.085Z [INFO]: Restarting Inventory Analytics MCP server... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:32:52.090Z [WARN]: Customer Preferences MCP exited with code 0 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:32:52.090Z [INFO]: Restarting Customer Preferences MCP server... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:32:52.094Z [ERROR]: Marketing Optimization MCP Error: Failed to start MCP server: TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:444:13
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:32:52.097Z [WARN]: Marketing Optimization MCP exited with code 0 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:32:52.098Z [INFO]: Restarting Marketing Optimization MCP server... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:35:56.165Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T09:35:56.168Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:35:56.176Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T09:35:56.183Z [INFO]: Server running on port 3002 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T09:35:56.247Z [ERROR]: Inventory Analytics MCP Error: Failed to start MCP server: TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:357:13
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:35:56.256Z [WARN]: Inventory Analytics MCP exited with code 0 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:35:56.257Z [INFO]: Restarting Inventory Analytics MCP server... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:35:56.261Z [ERROR]: Customer Preferences MCP Error: Failed to start MCP server: TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:307:13
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:35:56.264Z [WARN]: Customer Preferences MCP exited with code 0 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:35:56.264Z [INFO]: Restarting Customer Preferences MCP server... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:35:56.279Z [ERROR]: Marketing Optimization MCP Error: Failed to start MCP server: TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:444:13
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:35:56.284Z [WARN]: Marketing Optimization MCP exited with code 0 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:35:56.285Z [INFO]: Restarting Marketing Optimization MCP server... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:52:40.836Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T09:52:40.838Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:52:40.847Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T09:52:40.857Z [INFO]: Server running on port 3000 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T09:52:40.921Z [ERROR]: Marketing Optimization MCP Error: Failed to start MCP server: TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-c.js:444:13
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:52:40.923Z [ERROR]: Customer Preferences MCP Error: Failed to start MCP server: TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-a.js:307:13
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:52:40.930Z [ERROR]: Inventory Analytics MCP Error: Failed to start MCP server: TypeError: transport.listen is not a function
    at file:///afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/server/mcp-server-b.js:357:13
    at ModuleJob.run (node:internal/modules/esm/module_job:263:25)
    at async ModuleLoader.import (node:internal/modules/esm/loader:540:24)
    at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:117:5)
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:52:40.931Z [WARN]: Marketing Optimization MCP exited with code 0 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:52:40.931Z [INFO]: Restarting Marketing Optimization MCP server... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:52:40.934Z [WARN]: Customer Preferences MCP exited with code 0 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:52:40.935Z [INFO]: Restarting Customer Preferences MCP server... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:52:40.938Z [WARN]: Inventory Analytics MCP exited with code 0 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:52:40.939Z [INFO]: Restarting Inventory Analytics MCP server... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:54:14.371Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7b937121-7b6b-4d9c-8160-aa9f42ea1266&vscodeBrowserReqId=1747475645464",
  "statusCode": 200,
  "responseTime": "6ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7b937121-7b6b-4d9c-8160-aa9f42ea1266",
    "vscodeBrowserReqId": "1747475645464"
  }
}
2025-05-17T09:54:14.519Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 200,
  "responseTime": "4ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:54:14.525Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:54:45.193Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T09:54:45.195Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T09:54:45.205Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T09:54:45.211Z [INFO]: Server running on port 3000 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T09:54:45.282Z [INFO]: Customer Preferences MCP: Customer Preference & Purchase History MCP Server started
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:54:45.292Z [INFO]: Inventory Analytics MCP: Inventory & Supply Chain Analytics MCP Server started
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:54:45.301Z [INFO]: Marketing Optimization MCP: Promotion & Marketing Optimization MCP Server started
 {
  "service": "smart-retail-assistant"
}
2025-05-17T09:54:52.015Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7b937121-7b6b-4d9c-8160-aa9f42ea1266&vscodeBrowserReqId=1747475688634",
  "statusCode": 200,
  "responseTime": "6ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7b937121-7b6b-4d9c-8160-aa9f42ea1266",
    "vscodeBrowserReqId": "1747475688634"
  }
}
2025-05-17T09:54:52.148Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 200,
  "responseTime": "4ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:54:52.154Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:54:58.059Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7b937121-7b6b-4d9c-8160-aa9f42ea1266&vscodeBrowserReqId=1747475698071",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7b937121-7b6b-4d9c-8160-aa9f42ea1266",
    "vscodeBrowserReqId": "1747475698071"
  }
}
2025-05-17T09:54:58.211Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:54:58.340Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:55:07.644Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What are the current preferences for customer Alice Johnson?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T09:55:07.645Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What are the current preferences for customer Alice Johnson?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T09:55:10.535Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7b937121-7b6b-4d9c-8160-aa9f42ea1266&vscodeBrowserReqId=1747475710543",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7b937121-7b6b-4d9c-8160-aa9f42ea1266",
    "vscodeBrowserReqId": "1747475710543"
  }
}
2025-05-17T09:55:10.692Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:55:10.795Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "3152ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "What are the current preferences for customer Alice Johnson?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T09:55:10.817Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:55:21.059Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the Premium Anti-Aging Serum in stock?",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4.1",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for advanced reasoning capabilities"
}
2025-05-17T09:55:21.059Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the Premium Anti-Aging Serum in stock?",
  "model": "gpt-4.1",
  "serverType": "Inventory Analytics"
}
2025-05-17T09:55:21.581Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "522ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "Is the Premium Anti-Aging Serum in stock?",
    "customerName": "Carol Davis"
  }
}
2025-05-17T09:55:26.827Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7b937121-7b6b-4d9c-8160-aa9f42ea1266&vscodeBrowserReqId=1747475726810",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7b937121-7b6b-4d9c-8160-aa9f42ea1266",
    "vscodeBrowserReqId": "1747475726810"
  }
}
2025-05-17T09:55:26.963Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:55:27.128Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:55:32.142Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions are currently active?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T09:55:32.142Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions are currently active?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T09:55:34.476Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7b937121-7b6b-4d9c-8160-aa9f42ea1266&vscodeBrowserReqId=1747475734485",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7b937121-7b6b-4d9c-8160-aa9f42ea1266",
    "vscodeBrowserReqId": "1747475734485"
  }
}
2025-05-17T09:55:34.606Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:55:34.727Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:55:35.510Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "3369ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "What promotions are currently active?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T09:55:45.509Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What are the current preferences for customer Alice Johnson?",
  "serverType": "Customer Preferences",
  "requestedModel": "gpt-35-turbo",
  "selectedModel": "gpt-35-turbo",
  "dynamicSelection": false,
  "modelSelectionReason": "User-selected model (gpt-35-turbo)"
}
2025-05-17T09:55:45.509Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What are the current preferences for customer Alice Johnson?",
  "model": "gpt-35-turbo",
  "serverType": "Customer Preferences"
}
2025-05-17T09:55:45.860Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "351ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "What are the current preferences for customer Alice Johnson?",
    "customerName": "Alice Johnson",
    "preferredModel": "gpt-35-turbo"
  }
}
2025-05-17T09:55:48.146Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7b937121-7b6b-4d9c-8160-aa9f42ea1266&vscodeBrowserReqId=1747475748154",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7b937121-7b6b-4d9c-8160-aa9f42ea1266",
    "vscodeBrowserReqId": "1747475748154"
  }
}
2025-05-17T09:55:48.302Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:55:48.434Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:56:09.608Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7b937121-7b6b-4d9c-8160-aa9f42ea1266&vscodeBrowserReqId=1747475769619",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7b937121-7b6b-4d9c-8160-aa9f42ea1266",
    "vscodeBrowserReqId": "1747475769619"
  }
}
2025-05-17T09:56:09.765Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:56:09.891Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:58:48.684Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7b937121-7b6b-4d9c-8160-aa9f42ea1266&vscodeBrowserReqId=1747475924781",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7b937121-7b6b-4d9c-8160-aa9f42ea1266",
    "vscodeBrowserReqId": "1747475924781"
  }
}
2025-05-17T09:58:48.883Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:58:48.884Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:59:32.021Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7b937121-7b6b-4d9c-8160-aa9f42ea1266&vscodeBrowserReqId=1747475968329",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7b937121-7b6b-4d9c-8160-aa9f42ea1266",
    "vscodeBrowserReqId": "1747475968329"
  }
}
2025-05-17T09:59:32.171Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T09:59:32.274Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:02:06.818Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7b937121-7b6b-4d9c-8160-aa9f42ea1266&vscodeBrowserReqId=1747476122881",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7b937121-7b6b-4d9c-8160-aa9f42ea1266",
    "vscodeBrowserReqId": "1747476122881"
  }
}
2025-05-17T10:02:06.989Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:02:06.989Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:02:35.237Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T10:02:35.239Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T10:02:35.249Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T10:02:35.255Z [INFO]: Server running on port 3005 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T10:02:35.336Z [INFO]: Customer Preferences MCP: Customer Preference & Purchase History MCP Server started
 {
  "service": "smart-retail-assistant"
}
2025-05-17T10:02:35.337Z [INFO]: Inventory Analytics MCP: Inventory & Supply Chain Analytics MCP Server started
 {
  "service": "smart-retail-assistant"
}
2025-05-17T10:02:35.350Z [INFO]: Marketing Optimization MCP: Promotion & Marketing Optimization MCP Server started
 {
  "service": "smart-retail-assistant"
}
2025-05-17T10:02:49.224Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7b937121-7b6b-4d9c-8160-aa9f42ea1266&vscodeBrowserReqId=1747476166092",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7b937121-7b6b-4d9c-8160-aa9f42ea1266",
    "vscodeBrowserReqId": "1747476166092"
  }
}
2025-05-17T10:02:49.387Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:02:49.440Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:02:54.168Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What are my shopping preferences?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T10:02:54.168Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What are my shopping preferences?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T10:02:56.022Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "1855ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "What are my shopping preferences?"
  }
}
2025-05-17T10:03:04.807Z [INFO]: Ping request received {
  "service": "smart-retail-assistant"
}
2025-05-17T10:03:04.809Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/ping",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "curl/7.88.1",
  "query": {}
}
2025-05-17T10:03:12.629Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7b937121-7b6b-4d9c-8160-aa9f42ea1266&vscodeBrowserReqId=1747476188242",
  "statusCode": 200,
  "responseTime": "4ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7b937121-7b6b-4d9c-8160-aa9f42ea1266",
    "vscodeBrowserReqId": "1747476188242"
  }
}
2025-05-17T10:03:12.766Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 200,
  "responseTime": "3ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:03:12.907Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:03:32.021Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What products would you recommend based on my purchase history?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T10:03:32.021Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What products would you recommend based on my purchase history?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T10:03:34.302Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "2281ms",
  "userAgent": "curl/7.88.1",
  "query": {
    "query": "What products would you recommend based on my purchase history?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:03:39.598Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:03:39.783Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:03:39.786Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 200,
  "responseTime": "5ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:03:41.000Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 200,
  "responseTime": "3ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:03:44.764Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:03:44.899Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:03:50.202Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:03:50.427Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:03:50.429Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:03:51.290Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 200,
  "responseTime": "3ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:03:56.385Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:03:56.527Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:09.580Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/health",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Wget/1.21.3",
  "query": {}
}
2025-05-17T10:04:12.220Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 304,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:12.398Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:16.047Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:16.448Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:16.449Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 304,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:16.586Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:20.859Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What products would you recommend based on my purchase history?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T10:04:20.859Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What products would you recommend based on my purchase history?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T10:04:22.365Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "1506ms",
  "userAgent": "Wget/1.21.3",
  "query": {
    "query": "What products would you recommend based on my purchase history?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:04:27.563Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:27.684Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:27.807Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:27.897Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:27.945Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:28.130Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:32.151Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:32.153Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:32.288Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:32.871Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:32.879Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 304,
  "responseTime": "0ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:33.016Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:59.811Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:04:59.994Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:05:00.003Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:05:00.185Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:05:03.711Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:05:03.852Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 304,
  "responseTime": "0ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:09:03.211Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:09:03.386Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:09:03.694Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:09:03.901Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:09:08.239Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:09:08.373Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:15:34.985Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 304,
  "responseTime": "0ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:15:35.153Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:15:35.162Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "0ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:15:35.435Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:15:38.940Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:15:39.102Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:16:16.597Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/health",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "curl/7.88.1",
  "query": {}
}
2025-05-17T10:16:24.988Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7f3769ec-c47f-4166-8c28-a3c62bf65867&vscodeBrowserReqId=1747476981602",
  "statusCode": 200,
  "responseTime": "5ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7f3769ec-c47f-4166-8c28-a3c62bf65867",
    "vscodeBrowserReqId": "1747476981602"
  }
}
2025-05-17T10:16:25.140Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:16:25.149Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:16:34.249Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/health",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "curl/7.88.1",
  "query": {}
}
2025-05-17T10:16:40.807Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7f3769ec-c47f-4166-8c28-a3c62bf65867&vscodeBrowserReqId=1747476997116",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7f3769ec-c47f-4166-8c28-a3c62bf65867",
    "vscodeBrowserReqId": "1747476997116"
  }
}
2025-05-17T10:16:40.936Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.b019867a.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:16:41.119Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "3ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:17:17.898Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7f3769ec-c47f-4166-8c28-a3c62bf65867&vscodeBrowserReqId=1747477034778",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7f3769ec-c47f-4166-8c28-a3c62bf65867",
    "vscodeBrowserReqId": "1747477034778"
  }
}
2025-05-17T10:17:18.057Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.6e76bae7.js",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:17:18.491Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:17:18.643Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T10:17:18.644Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:17:19.817Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T10:17:19.817Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T10:17:25.485Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "5669ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "I'm looking for sustainable skincare products. Can you recommend something?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:18:06.376Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T10:18:06.376Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T10:18:08.523Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "2147ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Can you tell me about my past purchases?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:18:11.718Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T10:18:11.718Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T10:18:15.987Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "4269ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:18:29.091Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4.1",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for advanced reasoning capabilities"
}
2025-05-17T10:18:29.091Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4.1",
  "serverType": "Inventory Analytics"
}
2025-05-17T10:18:29.811Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "720ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:18:34.406Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T10:18:34.407Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T10:20:04.082Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "89676ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:24:20.918Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T10:24:20.920Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T10:24:20.933Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T10:24:20.938Z [INFO]: Server running on port 3005 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T10:24:21.054Z [INFO]: Marketing Optimization MCP: Promotion & Marketing Optimization MCP Server started
 {
  "service": "smart-retail-assistant"
}
2025-05-17T10:24:21.108Z [INFO]: Inventory Analytics MCP: Inventory & Supply Chain Analytics MCP Server started
 {
  "service": "smart-retail-assistant"
}
2025-05-17T10:24:21.122Z [INFO]: Customer Preferences MCP: Customer Preference & Purchase History MCP Server started
 {
  "service": "smart-retail-assistant"
}
2025-05-17T10:24:34.851Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7687038b-1890-4310-aab5-e3c42f678ee1&vscodeBrowserReqId=1747477465333",
  "statusCode": 200,
  "responseTime": "6ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7687038b-1890-4310-aab5-e3c42f678ee1",
    "vscodeBrowserReqId": "1747477465333"
  }
}
2025-05-17T10:24:35.061Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.6e76bae7.js",
  "statusCode": 200,
  "responseTime": "3ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:24:35.067Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:24:35.659Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T10:24:35.660Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "3ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:24:37.228Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T10:24:37.228Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T10:24:43.912Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/health",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Wget/1.21.3",
  "query": {}
}
2025-05-17T10:24:54.243Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What products would you recommend based on my purchase history?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T10:24:54.243Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What products would you recommend based on my purchase history?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T10:24:55.862Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7687038b-1890-4310-aab5-e3c42f678ee1&vscodeBrowserReqId=1747477487669",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7687038b-1890-4310-aab5-e3c42f678ee1",
    "vscodeBrowserReqId": "1747477487669"
  }
}
2025-05-17T10:24:56.068Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.6e76bae7.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:24:56.216Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:24:56.293Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "2051ms",
  "userAgent": "Wget/1.21.3",
  "query": {
    "query": "What products would you recommend based on my purchase history?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:24:56.465Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T10:24:56.466Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:24:57.580Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7687038b-1890-4310-aab5-e3c42f678ee1&vscodeBrowserReqId=1747477497525",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7687038b-1890-4310-aab5-e3c42f678ee1",
    "vscodeBrowserReqId": "1747477497525"
  }
}
2025-05-17T10:24:57.819Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.6e76bae7.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:25:03.874Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:25:04.142Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T10:25:04.142Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:25:06.141Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T10:25:06.141Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T10:25:08.105Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4.1",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for advanced reasoning capabilities"
}
2025-05-17T10:25:08.105Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4.1",
  "serverType": "Inventory Analytics"
}
2025-05-17T10:25:08.715Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "610ms",
  "userAgent": "Wget/1.21.3",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:25:16.519Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7687038b-1890-4310-aab5-e3c42f678ee1&vscodeBrowserReqId=1747477510679",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7687038b-1890-4310-aab5-e3c42f678ee1",
    "vscodeBrowserReqId": "1747477510679"
  }
}
2025-05-17T10:25:16.673Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.6e76bae7.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:25:16.795Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:25:16.942Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T10:25:16.943Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:25:19.110Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T10:25:19.112Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T10:26:46.800Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "87689ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:27:00.498Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T10:27:00.498Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T10:27:03.637Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "3140ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Can you tell me about my past purchases?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:27:23.017Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T10:27:23.017Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T10:27:27.233Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "4216ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:27:28.462Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4.1",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for advanced reasoning capabilities"
}
2025-05-17T10:27:28.462Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4.1",
  "serverType": "Inventory Analytics"
}
2025-05-17T10:27:28.909Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "446ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:30:34.359Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7687038b-1890-4310-aab5-e3c42f678ee1&vscodeBrowserReqId=1747477829123",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7687038b-1890-4310-aab5-e3c42f678ee1",
    "vscodeBrowserReqId": "1747477829123"
  }
}
2025-05-17T10:30:34.503Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.6e76bae7.js",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:30:34.620Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:30:34.994Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T10:30:34.995Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T10:30:39.352Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4.1",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for advanced reasoning capabilities"
}
2025-05-17T10:30:39.352Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4.1",
  "serverType": "Inventory Analytics"
}
2025-05-17T10:30:39.964Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "612ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:30:42.461Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T10:30:42.461Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T10:32:10.906Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "88445ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:34:28.335Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T10:34:28.336Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T10:34:32.456Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "4121ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:45:43.698Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T10:45:43.698Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T10:45:48.828Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "5130ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:46:06.452Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 200,
  "responseTime": "4ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:46:06.665Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:46:06.666Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.6e76bae7.js",
  "statusCode": 200,
  "responseTime": "3ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:46:07.402Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T10:46:07.402Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:46:07.405Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:46:09.878Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4.1",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for advanced reasoning capabilities"
}
2025-05-17T10:46:09.878Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4.1",
  "serverType": "Inventory Analytics"
}
2025-05-17T10:46:10.540Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "662ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:46:12.455Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 200,
  "responseTime": "4ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:46:12.603Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T10:52:07.909Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T10:52:07.909Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T10:52:53.993Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "46084ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:53:06.548Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you quickly list our top 10 bestselling products this week? Please use GPT-3.5 Turbo for a fast response.",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-35-turbo",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for speed and efficiency"
}
2025-05-17T10:53:06.548Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you quickly list our top 10 bestselling products this week? Please use GPT-3.5 Turbo for a fast response.",
  "model": "gpt-35-turbo",
  "serverType": "Customer Preferences"
}
2025-05-17T10:53:07.468Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "920ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Can you quickly list our top 10 bestselling products this week? Please use GPT-3.5 Turbo for a fast response.",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:53:20.897Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": " capabilities Can you quickly list our top 10 bestselling products this week?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-35-turbo",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for speed and efficiency"
}
2025-05-17T10:53:20.897Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": " capabilities Can you quickly list our top 10 bestselling products this week?",
  "model": "gpt-35-turbo",
  "serverType": "Customer Preferences"
}
2025-05-17T10:53:21.450Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "553ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": " capabilities Can you quickly list our top 10 bestselling products this week?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:53:26.469Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4.1",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for advanced reasoning capabilities"
}
2025-05-17T10:53:26.469Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4.1",
  "serverType": "Inventory Analytics"
}
2025-05-17T10:53:27.109Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "640ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:55:00.111Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you provide an in-depth breakdown of how our recent limited-time promotion affected both inventory turnover rates and customer acquisition metrics, and predict future performance if we extend similar promotions to different product categories? ",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4.1",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for advanced reasoning capabilities"
}
2025-05-17T10:55:00.111Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you provide an in-depth breakdown of how our recent limited-time promotion affected both inventory turnover rates and customer acquisition metrics, and predict future performance if we extend similar promotions to different product categories? ",
  "model": "gpt-4.1",
  "serverType": "Inventory Analytics"
}
2025-05-17T10:55:08.191Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "8080ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Can you provide an in-depth breakdown of how our recent limited-time promotion affected both inventory turnover rates and customer acquisition metrics, and predict future performance if we extend similar promotions to different product categories? ",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:55:39.282Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you provide an in-depth breakdown of how our recent limited-time promotion affected both inventory turnover rates and customer acquisition metrics, and predict future performance if we extend similar promotions to different product categories? Use GPT-4o for this complex analysis",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4.1",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for advanced reasoning capabilities"
}
2025-05-17T10:55:39.282Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you provide an in-depth breakdown of how our recent limited-time promotion affected both inventory turnover rates and customer acquisition metrics, and predict future performance if we extend similar promotions to different product categories? Use GPT-4o for this complex analysis",
  "model": "gpt-4.1",
  "serverType": "Inventory Analytics"
}
2025-05-17T10:55:48.502Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "9220ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Can you provide an in-depth breakdown of how our recent limited-time promotion affected both inventory turnover rates and customer acquisition metrics, and predict future performance if we extend similar promotions to different product categories? Use GPT-4o for this complex analysis",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:56:28.164Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you provide an in-depth breakdown of how our recent limited-time promotion affected both inventory turnover rates and customer acquisition metrics, and predict future performance if we extend similar promotions to different product categories? Use GPT-4.5-preview for this complex analysis",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4.1",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for advanced reasoning capabilities"
}
2025-05-17T10:56:28.164Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you provide an in-depth breakdown of how our recent limited-time promotion affected both inventory turnover rates and customer acquisition metrics, and predict future performance if we extend similar promotions to different product categories? Use GPT-4.5-preview for this complex analysis",
  "model": "gpt-4.1",
  "serverType": "Inventory Analytics"
}
2025-05-17T10:56:34.608Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "6444ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Can you provide an in-depth breakdown of how our recent limited-time promotion affected both inventory turnover rates and customer acquisition metrics, and predict future performance if we extend similar promotions to different product categories? Use GPT-4.5-preview for this complex analysis",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:56:44.892Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4.1",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for advanced reasoning capabilities"
}
2025-05-17T10:56:44.892Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4.1",
  "serverType": "Inventory Analytics"
}
2025-05-17T10:56:45.376Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "484ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:57:13.087Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you quickly list our top 10 bestselling products this week? Please use GPT-3.5 Turbo for a fast response",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-35-turbo",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for speed and efficiency"
}
2025-05-17T10:57:13.087Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you quickly list our top 10 bestselling products this week? Please use GPT-3.5 Turbo for a fast response",
  "model": "gpt-35-turbo",
  "serverType": "Customer Preferences"
}
2025-05-17T10:57:13.630Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "543ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Can you quickly list our top 10 bestselling products this week? Please use GPT-3.5 Turbo for a fast response",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:57:35.574Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "I need GPT-4.1 to analyze our seasonal inventory turnover trends, but then switch to GPT-4.5-preview to generate creative promotional ideas for the slow-moving summer items you identify.\"",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4.1",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for advanced analytics capabilities"
}
2025-05-17T10:57:35.574Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "I need GPT-4.1 to analyze our seasonal inventory turnover trends, but then switch to GPT-4.5-preview to generate creative promotional ideas for the slow-moving summer items you identify.\"",
  "model": "gpt-4.1",
  "serverType": "Inventory Analytics"
}
2025-05-17T10:57:40.550Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "4976ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "I need GPT-4.1 to analyze our seasonal inventory turnover trends, but then switch to GPT-4.5-preview to generate creative promotional ideas for the slow-moving summer items you identify.\"",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:58:11.124Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "switch to GPT-4.5-preview to generate creative promotional ideas for the slow-moving summer items you identify.",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for creative generation capabilities"
}
2025-05-17T10:58:11.124Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "switch to GPT-4.5-preview to generate creative promotional ideas for the slow-moving summer items you identify.",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T10:58:15.035Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "3911ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "switch to GPT-4.5-preview to generate creative promotional ideas for the slow-moving summer items you identify.",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T10:59:07.367Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you first quickly summarize our top 5 customer segments using GPT-3.5 Turbo, and then use GPT-4o to provide a detailed analysis of their purchasing behaviors and recommend personalized marketing strategies for each segment?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for complex analysis capabilities"
}
2025-05-17T10:59:07.367Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you first quickly summarize our top 5 customer segments using GPT-3.5 Turbo, and then use GPT-4o to provide a detailed analysis of their purchasing behaviors and recommend personalized marketing strategies for each segment?",
  "model": "gpt-4o",
  "serverType": "Marketing Optimization"
}
2025-05-17T10:59:25.392Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "18025ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Can you first quickly summarize our top 5 customer segments using GPT-3.5 Turbo, and then use GPT-4o to provide a detailed analysis of their purchasing behaviors and recommend personalized marketing strategies for each segment?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:05:01.865Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T11:05:01.866Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T11:05:03.839Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "1974ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Can you tell me about my past purchases?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:05:07.439Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T11:05:07.439Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T11:06:24.677Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T11:06:24.677Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T11:06:35.170Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "87731ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:09:12.376Z [ERROR]: Error with Azure OpenAI request {
  "service": "smart-retail-assistant",
  "error": "The server had an error while processing your request. Sorry about that!",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T11:09:12.376Z [WARN]: Falling back to mock response {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization"
}
2025-05-17T11:09:12.377Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "167701ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:15:34.784Z [INFO]: Azure OpenAI client initialized successfully {
  "service": "smart-retail-assistant",
  "endpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels"
}
2025-05-17T11:15:34.786Z [INFO]: Starting MCP servers... {
  "service": "smart-retail-assistant"
}
2025-05-17T11:15:34.795Z [INFO]: All MCP servers started {
  "service": "smart-retail-assistant"
}
2025-05-17T11:15:34.803Z [INFO]: Server running on port 3005 {
  "service": "smart-retail-assistant",
  "azureEndpoint": "https://oaimodels.openai.azure.com/",
  "modelGroup": "oaimodels",
  "environment": "development"
}
2025-05-17T11:15:34.865Z [INFO]: Inventory Analytics MCP: Inventory & Supply Chain Analytics MCP Server started
 {
  "service": "smart-retail-assistant"
}
2025-05-17T11:15:34.875Z [INFO]: Customer Preferences MCP: Customer Preference & Purchase History MCP Server started
 {
  "service": "smart-retail-assistant"
}
2025-05-17T11:15:34.883Z [INFO]: Marketing Optimization MCP: Promotion & Marketing Optimization MCP Server started
 {
  "service": "smart-retail-assistant"
}
2025-05-17T11:15:49.842Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/?id=7687038b-1890-4310-aab5-e3c42f678ee1&vscodeBrowserReqId=1747480536829",
  "statusCode": 200,
  "responseTime": "6ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "id": "7687038b-1890-4310-aab5-e3c42f678ee1",
    "vscodeBrowserReqId": "1747480536829"
  }
}
2025-05-17T11:15:50.005Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.6e76bae7.js",
  "statusCode": 200,
  "responseTime": "4ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T11:15:50.011Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T11:15:50.627Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T11:15:50.628Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "3ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {}
}
2025-05-17T11:15:53.986Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4.1",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for advanced reasoning capabilities"
}
2025-05-17T11:15:53.986Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4.1",
  "serverType": "Inventory Analytics"
}
2025-05-17T11:15:54.611Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "626ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:17:25.944Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T11:17:25.945Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T11:18:31.158Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T11:18:31.357Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 200,
  "responseTime": "3ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T11:18:31.358Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.6e76bae7.js",
  "statusCode": 200,
  "responseTime": "5ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T11:18:31.889Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T11:18:31.890Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T11:18:32.049Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 200,
  "responseTime": "3ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T11:18:33.540Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T11:18:33.541Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T11:18:35.736Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T11:18:35.879Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T11:18:38.159Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "4619ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:20:12.636Z [ERROR]: Error with Azure OpenAI request {
  "service": "smart-retail-assistant",
  "error": "The server had an error while processing your request. Sorry about that!",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T11:20:12.637Z [WARN]: Falling back to mock response {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization"
}
2025-05-17T11:20:12.638Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "166694ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Code/1.100.2 Chrome/132.0.6834.210 Electron/34.5.1 Safari/537.36",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:20:17.978Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T11:20:17.978Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T11:20:27.806Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "9828ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "I'm looking for sustainable skincare products. Can you recommend something?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:26:52.445Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T11:26:52.445Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T11:26:55.021Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "2576ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Can you tell me about my past purchases?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:27:03.348Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T11:27:03.348Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T11:27:07.040Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "3693ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:27:57.927Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T11:27:57.928Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T11:28:00.933Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "3006ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Can you tell me about my past purchases?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:28:02.907Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4.1",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for advanced reasoning capabilities"
}
2025-05-17T11:28:02.907Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4.1",
  "serverType": "Inventory Analytics"
}
2025-05-17T11:28:03.452Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "545ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:28:05.230Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T11:28:05.231Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T11:28:12.199Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "6969ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "I'm looking for sustainable skincare products. Can you recommend something?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:28:45.835Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something? use GPT-4.1 for this question",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T11:28:45.835Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something? use GPT-4.1 for this question",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T11:28:57.171Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "11336ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "I'm looking for sustainable skincare products. Can you recommend something? use GPT-4.1 for this question",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:29:35.650Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "use GPT-4.1 for this question. I'm looking for sustainable skincare products. Can you recommend something? ",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T11:29:35.650Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "use GPT-4.1 for this question. I'm looking for sustainable skincare products. Can you recommend something? ",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T11:29:47.800Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "12151ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "use GPT-4.1 for this question. I'm looking for sustainable skincare products. Can you recommend something? ",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:30:47.198Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Based on our detailed customer segmentation data, can you provide a comprehensive analysis of purchasing patterns among millennials over the last quarter, and use GPT-4.1 to explain how these patterns correlate with our loyalty program effectiveness?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for complex analysis capabilities"
}
2025-05-17T11:30:47.199Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Based on our detailed customer segmentation data, can you provide a comprehensive analysis of purchasing patterns among millennials over the last quarter, and use GPT-4.1 to explain how these patterns correlate with our loyalty program effectiveness?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T11:31:00.756Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "13558ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Based on our detailed customer segmentation data, can you provide a comprehensive analysis of purchasing patterns among millennials over the last quarter, and use GPT-4.1 to explain how these patterns correlate with our loyalty program effectiveness?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:32:03.727Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Based on our detailed customer segmentation data, can you provide a comprehensive analysis of purchasing patterns among millennials over the last quarter, and use GPT-4 to explain how these patterns correlate with our loyalty program effectiveness?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for complex analysis capabilities"
}
2025-05-17T11:32:03.728Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Based on our detailed customer segmentation data, can you provide a comprehensive analysis of purchasing patterns among millennials over the last quarter, and use GPT-4 to explain how these patterns correlate with our loyalty program effectiveness?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T11:32:13.258Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "9531ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Based on our detailed customer segmentation data, can you provide a comprehensive analysis of purchasing patterns among millennials over the last quarter, and use GPT-4 to explain how these patterns correlate with our loyalty program effectiveness?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:32:25.694Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T11:32:25.695Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T11:32:30.173Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "4479ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "I'm looking for sustainable skincare products. Can you recommend something?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:32:47.678Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "what is the current skincare product trends?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T11:32:47.678Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "what is the current skincare product trends?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T11:32:56.982Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "9303ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "what is the current skincare product trends?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T11:33:16.941Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "can you recommend a shirt for my blue shorts?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-35-turbo",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most suitable model for this simple query"
}
2025-05-17T11:33:16.941Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "can you recommend a shirt for my blue shorts?",
  "model": "gpt-35-turbo",
  "serverType": "Customer Preferences"
}
2025-05-17T11:33:17.781Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "840ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "can you recommend a shirt for my blue shorts?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T12:03:41.913Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T12:03:41.913Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T12:03:44.395Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "2482ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Can you tell me about my past purchases?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T12:04:32.349Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T12:04:32.350Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T12:04:37.357Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "5008ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T12:10:55.266Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T12:10:55.266Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:11:33.413Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:11:33.617Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:11:33.618Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.6e76bae7.js",
  "statusCode": 200,
  "responseTime": "4ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:11:34.162Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T12:11:34.163Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:11:34.330Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:11:37.730Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 200,
  "responseTime": "4ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:11:37.870Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 200,
  "responseTime": "2ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:11:52.918Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T12:11:52.918Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T12:12:00.718Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "7800ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "I'm looking for sustainable skincare products. Can you recommend something?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T12:12:07.653Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T12:12:07.654Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:14:28.066Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T12:14:28.067Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:14:39.169Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T12:14:39.169Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:14:43.180Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T12:14:43.180Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:17:37.203Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T12:17:37.203Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T12:17:42.107Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "4904ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T12:18:16.116Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:18:16.296Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/js/main.6e76bae7.js",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:18:20.784Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/static/css/main.1f967cbb.css",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:18:20.918Z [INFO]: Models information requested {
  "service": "smart-retail-assistant",
  "clientIP": "::1",
  "modelsCount": 5
}
2025-05-17T12:18:20.919Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/api/models",
  "statusCode": 200,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:18:20.972Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/favicon.ico",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:18:24.215Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/manifest.json",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:18:24.341Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "GET",
  "url": "/logo192.png",
  "statusCode": 304,
  "responseTime": "1ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {}
}
2025-05-17T12:18:24.390Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T12:18:24.390Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T12:18:30.168Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "5779ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "I'm looking for sustainable skincare products. Can you recommend something?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T12:23:48.732Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T12:23:48.733Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T12:23:50.416Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "1684ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Can you tell me about my past purchases?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T12:26:35.838Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T12:26:35.839Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Can you tell me about my past purchases?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T12:26:37.660Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "1822ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Can you tell me about my past purchases?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T12:26:39.765Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "serverType": "Inventory Analytics",
  "selectedModel": "gpt-4.1",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for advanced reasoning capabilities"
}
2025-05-17T12:26:39.766Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Is the organic aloe vera moisturizer currently in stock?",
  "model": "gpt-4.1",
  "serverType": "Inventory Analytics"
}
2025-05-17T12:26:40.214Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "449ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Is the organic aloe vera moisturizer currently in stock?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T12:26:41.852Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T12:26:41.853Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "I'm looking for sustainable skincare products. Can you recommend something?",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T12:26:48.412Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "6560ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "I'm looking for sustainable skincare products. Can you recommend something?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T12:26:50.765Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T12:26:50.766Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T12:26:56.112Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "5347ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T12:41:26.764Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "Analyze the sales trends for the last quarter and forecast the next quarter.",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T12:41:26.764Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "Analyze the sales trends for the last quarter and forecast the next quarter.",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T12:41:32.267Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "5504ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "Analyze the sales trends for the last quarter and forecast the next quarter.",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T12:41:55.260Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What are our bestselling products",
  "serverType": "Customer Preferences",
  "selectedModel": "gpt-4o",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected as the most capable model for this query"
}
2025-05-17T12:41:55.260Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What are our bestselling products",
  "model": "gpt-4o",
  "serverType": "Customer Preferences"
}
2025-05-17T12:42:01.616Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "6356ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "What are our bestselling products",
    "customerName": "Alice Johnson"
  }
}
2025-05-17T12:47:48.425Z [INFO]: Processing inquiry {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "serverType": "Marketing Optimization",
  "selectedModel": "gpt-4.5-preview",
  "dynamicSelection": true,
  "modelSelectionReason": "Selected for cutting-edge capabilities"
}
2025-05-17T12:47:48.426Z [INFO]: Processing query with Azure OpenAI {
  "service": "smart-retail-assistant",
  "query": "What promotions do you have for eco-friendly products?",
  "model": "gpt-4.5-preview",
  "serverType": "Marketing Optimization"
}
2025-05-17T12:47:53.605Z [INFO]: API Request {
  "service": "smart-retail-assistant",
  "method": "POST",
  "url": "/api/inquiry",
  "statusCode": 200,
  "responseTime": "5180ms",
  "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0",
  "query": {
    "query": "What promotions do you have for eco-friendly products?",
    "customerName": "Alice Johnson"
  }
}
