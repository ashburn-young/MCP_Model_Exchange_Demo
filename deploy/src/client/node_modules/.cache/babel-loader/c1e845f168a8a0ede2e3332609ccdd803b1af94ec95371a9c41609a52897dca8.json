{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[messages,setMessages]=useState([]);const[input,setInput]=useState('');const[isLoading,setIsLoading]=useState(false);const messagesEndRef=useRef(null);const apiUrl=process.env.REACT_APP_API_URL||'http://localhost:3002/api';// Example scenarios\nconst scenarios=[\"I'm looking for sustainable skincare products. Can you recommend something?\",\"Is the organic aloe vera moisturizer currently in stock?\",\"What promotions do you have for eco-friendly products?\",\"Can you tell me about my past purchases?\"];useEffect(()=>{scrollToBottom();},[messages]);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};const sendMessage=async messageText=>{if(!messageText.trim())return;// Add user message to the chat\nconst userMessage={text:messageText,sender:'user'};setMessages(prevMessages=>[...prevMessages,userMessage]);setInput('');setIsLoading(true);try{// Send the message to the API\nconst response=await axios.post(\"\".concat(apiUrl,\"/inquiry\"),{query:messageText,customerName:'Alice Johnson'// Default customer for demo\n});// Add assistant response to the chat\nconst assistantMessage={text:response.data.response,sender:'assistant',model:response.data.model,serverType:response.data.serverType,modelVersion:response.data.modelVersion||'unknown',usingMock:response.data.usingMock||false};setMessages(prevMessages=>[...prevMessages,assistantMessage]);}catch(error){console.error('Error sending message:',error);// Add error message\nconst errorMessage={text:'Sorry, there was an error processing your request. Please try again.',sender:'assistant'};setMessages(prevMessages=>[...prevMessages,errorMessage]);}finally{setIsLoading(false);}};const handleSubmit=e=>{e.preventDefault();sendMessage(input);};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"AI-Powered Smart Retail Assistant\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Using Model Context Protocol (MCP) with Azure OpenAI models\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"messages\",children:[messages.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"message assistant\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Hello! I'm your AI retail assistant. How can I help you today?\"})}),messages.map((message,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(message.sender),children:[/*#__PURE__*/_jsx(\"p\",{children:message.text}),message.model&&/*#__PURE__*/_jsxs(\"div\",{className:\"model-info\",children:[\"Powered by \",message.model,\" \",message.modelVersion!=='unknown'?\"(\".concat(message.modelVersion,\")\"):'',\" via \",message.serverType,\" MCP Server\",message.usingMock&&/*#__PURE__*/_jsx(\"span\",{className:\"mock-indicator\",children:\" (Using Simulated Response)\"})]})]},index)),isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"typing-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"input-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:e=>setInput(e.target.value),placeholder:\"Ask me about products, inventory, or promotions...\",disabled:isLoading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading||!input.trim(),children:\"Send\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"scenario-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Demo Scenarios\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click on any example to try it:\"}),scenarios.map((scenario,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"scenario-example\",onClick:()=>sendMessage(scenario),children:scenario},index))]})]});}export default App;","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsx","_jsx","jsxs","_jsxs","App","messages","setMessages","input","setInput","isLoading","setIsLoading","messagesEndRef","apiUrl","process","env","REACT_APP_API_URL","scenarios","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","messageText","trim","userMessage","text","sender","prevMessages","response","post","concat","query","customerName","assistantMessage","data","model","serverType","modelVersion","usingMock","error","console","errorMessage","handleSubmit","e","preventDefault","className","children","length","map","message","index","ref","onSubmit","type","value","onChange","target","placeholder","disabled","scenario","onClick"],"sources":["/afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/client/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  \n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:3002/api';\n  \n  // Example scenarios\n  const scenarios = [\n    \"I'm looking for sustainable skincare products. Can you recommend something?\",\n    \"Is the organic aloe vera moisturizer currently in stock?\",\n    \"What promotions do you have for eco-friendly products?\",\n    \"Can you tell me about my past purchases?\"\n  ];\n  \n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  \n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  const sendMessage = async (messageText) => {\n    if (!messageText.trim()) return;\n    \n    // Add user message to the chat\n    const userMessage = {\n      text: messageText,\n      sender: 'user'\n    };\n    \n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    \n    try {\n      // Send the message to the API\n      const response = await axios.post(`${apiUrl}/inquiry`, {\n        query: messageText,\n        customerName: 'Alice Johnson' // Default customer for demo\n      });\n      \n      // Add assistant response to the chat\n      const assistantMessage = {\n        text: response.data.response,\n        sender: 'assistant',\n        model: response.data.model,\n        serverType: response.data.serverType,\n        modelVersion: response.data.modelVersion || 'unknown',\n        usingMock: response.data.usingMock || false\n      };\n      \n      setMessages(prevMessages => [...prevMessages, assistantMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      \n      // Add error message\n      const errorMessage = {\n        text: 'Sorry, there was an error processing your request. Please try again.',\n        sender: 'assistant'\n      };\n      \n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    sendMessage(input);\n  };\n  \n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>AI-Powered Smart Retail Assistant</h1>\n        <p>Using Model Context Protocol (MCP) with Azure OpenAI models</p>\n      </header>\n      \n      <div className=\"chat-container\">\n        <div className=\"messages\">\n          {messages.length === 0 && (\n            <div className=\"message assistant\">\n              <p>Hello! I'm your AI retail assistant. How can I help you today?</p>\n            </div>\n          )}\n          \n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              <p>{message.text}</p>\n              {message.model && (\n                <div className=\"model-info\">\n                  Powered by {message.model} {message.modelVersion !== 'unknown' ? `(${message.modelVersion})` : ''} via {message.serverType} MCP Server\n                  {message.usingMock && <span className=\"mock-indicator\"> (Using Simulated Response)</span>}\n                </div>\n              )}\n            </div>\n          ))}\n          \n          {isLoading && (\n            <div className=\"typing-indicator\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          )}\n          \n          <div ref={messagesEndRef} />\n        </div>\n        \n        <form className=\"input-form\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Ask me about products, inventory, or promotions...\"\n            disabled={isLoading}\n          />\n          <button type=\"submit\" disabled={isLoading || !input.trim()}>\n            Send\n          </button>\n        </form>\n      </div>\n      \n      <div className=\"scenario-section\">\n        <h2>Demo Scenarios</h2>\n        <p>Click on any example to try it:</p>\n        \n        {scenarios.map((scenario, index) => (\n          <div \n            key={index} \n            className=\"scenario-example\"\n            onClick={() => sendMessage(scenario)}\n          >\n            {scenario}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}