{"ast":null,"code":"var _jsxFileName = \"/afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [availableModels, setAvailableModels] = useState([]);\n  const [selectedModel, setSelectedModel] = useState('');\n  const messagesEndRef = useRef(null);\n\n  // Force the API URL to the correct server port\n  const apiUrl = 'http://localhost:3002/api';\n\n  // Log the API URL for debugging\n  console.log('Using API URL:', apiUrl);\n\n  // Example scenarios\n  const scenarios = [\"I'm looking for sustainable skincare products. Can you recommend something?\", \"Is the organic aloe vera moisturizer currently in stock?\", \"What promotions do you have for eco-friendly products?\", \"Can you tell me about my past purchases?\"];\n\n  // Fetch available models when component mounts\n  useEffect(() => {\n    const fetchModels = async () => {\n      try {\n        const response = await axios.get(`${apiUrl}/models`);\n        setAvailableModels(response.data.models || []);\n        console.log('Available models:', response.data.models);\n      } catch (error) {\n        console.error('Error fetching models:', error);\n      }\n    };\n    fetchModels();\n  }, [apiUrl]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const sendMessage = async messageText => {\n    if (!messageText.trim()) return;\n\n    // Add user message to the chat\n    const userMessage = {\n      text: messageText,\n      sender: 'user'\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      // Send the message to the API\n      const response = await axios.post(`${apiUrl}/inquiry`, {\n        query: messageText,\n        customerName: 'Alice Johnson',\n        // Default customer for demo\n        preferredModel: selectedModel || undefined\n      });\n\n      // Add assistant response to the chat\n      const assistantMessage = {\n        text: response.data.response,\n        sender: 'assistant',\n        model: response.data.model,\n        serverType: response.data.serverType,\n        modelVersion: response.data.modelVersion || 'unknown',\n        usingMock: response.data.usingMock || false\n      };\n\n      // Update available models if they're returned in the response\n      if (response.data.availableModels && response.data.availableModels.length > 0) {\n        setAvailableModels(response.data.availableModels);\n      }\n      setMessages(prevMessages => [...prevMessages, assistantMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n\n      // Add detailed logging for debugging\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error('Error response data:', error.response.data);\n        console.error('Error response status:', error.response.status);\n        console.error('Error response headers:', error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error('Error request:', error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Error message:', error.message);\n      }\n\n      // Add error message\n      const errorMessage = {\n        text: 'Sorry, there was an error processing your request. Please try again. (Error: ' + (error.message || 'Unknown') + ')',\n        sender: 'assistant'\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    sendMessage(input);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI-Powered Smart Retail Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Using Model Context Protocol (MCP) with Azure OpenAI models\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), availableModels.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"model-select\",\n          children: \"Select AI Model: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"model-select\",\n          value: selectedModel,\n          onChange: e => setSelectedModel(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Default (Auto-select)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), availableModels.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: model.id,\n            children: [model.name, \" - \", model.description]\n          }, model.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Hello! I'm your AI retail assistant. How can I help you today?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), message.model && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"model-info\",\n            children: [\"Powered by \", message.model, \" \", message.modelVersion !== 'unknown' ? `(${message.modelVersion})` : '', \" via \", message.serverType, \" MCP Server\", message.usingMock && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mock-indicator\",\n              children: \" (Using Simulated Response)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"input-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Ask me about products, inventory, or promotions...\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading || !input.trim(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scenario-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Demo Scenarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click on any example to try it:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), scenarios.map((scenario, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scenario-example\",\n        onClick: () => sendMessage(scenario),\n        children: scenario\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Dbo3c2ZCRbwubUHONuCFbXbkj4o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","availableModels","setAvailableModels","selectedModel","setSelectedModel","messagesEndRef","apiUrl","console","log","scenarios","fetchModels","response","get","data","models","error","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","messageText","trim","userMessage","text","sender","prevMessages","post","query","customerName","preferredModel","undefined","assistantMessage","model","serverType","modelVersion","usingMock","length","status","headers","request","message","errorMessage","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","target","map","name","description","index","ref","onSubmit","type","placeholder","disabled","scenario","onClick","_c","$RefreshReg$"],"sources":["/afh/projects/kimyo-5913-193b8cf7-c6fc-4ba0-9f24-f7969c405f98/code/smart-retail-assistant/src/client/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [availableModels, setAvailableModels] = useState([]);\n  const [selectedModel, setSelectedModel] = useState('');\n  const messagesEndRef = useRef(null);\n  \n  // Force the API URL to the correct server port\n  const apiUrl = 'http://localhost:3002/api';\n  \n  // Log the API URL for debugging\n  console.log('Using API URL:', apiUrl);\n  \n  // Example scenarios\n  const scenarios = [\n    \"I'm looking for sustainable skincare products. Can you recommend something?\",\n    \"Is the organic aloe vera moisturizer currently in stock?\",\n    \"What promotions do you have for eco-friendly products?\",\n    \"Can you tell me about my past purchases?\"\n  ];\n\n  // Fetch available models when component mounts\n  useEffect(() => {\n    const fetchModels = async () => {\n      try {\n        const response = await axios.get(`${apiUrl}/models`);\n        setAvailableModels(response.data.models || []);\n        console.log('Available models:', response.data.models);\n      } catch (error) {\n        console.error('Error fetching models:', error);\n      }\n    };\n    \n    fetchModels();\n  }, [apiUrl]);\n  \n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  \n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  const sendMessage = async (messageText) => {\n    if (!messageText.trim()) return;\n    \n    // Add user message to the chat\n    const userMessage = {\n      text: messageText,\n      sender: 'user'\n    };\n    \n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    \n    try {\n      // Send the message to the API\n      const response = await axios.post(`${apiUrl}/inquiry`, {\n        query: messageText,\n        customerName: 'Alice Johnson', // Default customer for demo\n        preferredModel: selectedModel || undefined\n      });\n      \n      // Add assistant response to the chat\n      const assistantMessage = {\n        text: response.data.response,\n        sender: 'assistant',\n        model: response.data.model,\n        serverType: response.data.serverType,\n        modelVersion: response.data.modelVersion || 'unknown',\n        usingMock: response.data.usingMock || false\n      };\n      \n      // Update available models if they're returned in the response\n      if (response.data.availableModels && response.data.availableModels.length > 0) {\n        setAvailableModels(response.data.availableModels);\n      }\n      \n      setMessages(prevMessages => [...prevMessages, assistantMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      \n      // Add detailed logging for debugging\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error('Error response data:', error.response.data);\n        console.error('Error response status:', error.response.status);\n        console.error('Error response headers:', error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error('Error request:', error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Error message:', error.message);\n      }\n      \n      // Add error message\n      const errorMessage = {\n        text: 'Sorry, there was an error processing your request. Please try again. (Error: ' + (error.message || 'Unknown') + ')',\n        sender: 'assistant'\n      };\n      \n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    sendMessage(input);\n  };\n  \n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>AI-Powered Smart Retail Assistant</h1>\n        <p>Using Model Context Protocol (MCP) with Azure OpenAI models</p>\n        \n        {availableModels.length > 0 && (\n          <div className=\"model-selector\">\n            <label htmlFor=\"model-select\">Select AI Model: </label>\n            <select \n              id=\"model-select\"\n              value={selectedModel}\n              onChange={(e) => setSelectedModel(e.target.value)}\n            >\n              <option value=\"\">Default (Auto-select)</option>\n              {availableModels.map(model => (\n                <option key={model.id} value={model.id}>\n                  {model.name} - {model.description}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n      </header>\n      \n      <div className=\"chat-container\">\n        <div className=\"messages\">\n          {messages.length === 0 && (\n            <div className=\"message assistant\">\n              <p>Hello! I'm your AI retail assistant. How can I help you today?</p>\n            </div>\n          )}\n          \n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              <p>{message.text}</p>\n              {message.model && (\n                <div className=\"model-info\">\n                  Powered by {message.model} {message.modelVersion !== 'unknown' ? `(${message.modelVersion})` : ''} via {message.serverType} MCP Server\n                  {message.usingMock && <span className=\"mock-indicator\"> (Using Simulated Response)</span>}\n                </div>\n              )}\n            </div>\n          ))}\n          \n          {isLoading && (\n            <div className=\"typing-indicator\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          )}\n          \n          <div ref={messagesEndRef} />\n        </div>\n        \n        <form className=\"input-form\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Ask me about products, inventory, or promotions...\"\n            disabled={isLoading}\n          />\n          <button type=\"submit\" disabled={isLoading || !input.trim()}>\n            Send\n          </button>\n        </form>\n      </div>\n      \n      <div className=\"scenario-section\">\n        <h2>Demo Scenarios</h2>\n        <p>Click on any example to try it:</p>\n        \n        {scenarios.map((scenario, index) => (\n          <div \n            key={index} \n            className=\"scenario-example\"\n            onClick={() => sendMessage(scenario)}\n          >\n            {scenario}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}